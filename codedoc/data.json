{
    "project": {
        "name": "FWCloud API REST Documentation",
        "description": "[SOLTECSIS] FWCloud API REST code documentation",
        "version": "1.0.0",
        "url": "http://foswiki.soltecsis.com/codedoc/",
        "logo": "http://foswiki.soltecsis.com/codedoc/soltecsis-logo1.png"
    },
    "files": {
        "models/firewall/export.js": {
            "name": "models/firewall/export.js",
            "modules": {
                "FirewallExport": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "models/firewall/firewall.js": {
            "name": "models/firewall/firewall.js",
            "modules": {},
            "classes": {
                "FirewallModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "models/fwcloud/fwcloud.js": {
            "name": "models/fwcloud/fwcloud.js",
            "modules": {},
            "classes": {
                "FwcloudModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "models/ipobj/ipobj.js": {
            "name": "models/ipobj/ipobj.js",
            "modules": {},
            "classes": {
                "IpobjModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "models/policy/policy_script.js": {
            "name": "models/policy/policy_script.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "models/policy/rule_compile.js": {
            "name": "models/policy/rule_compile.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "routes/firewall/cluster.js": {
            "name": "routes/firewall/cluster.js",
            "modules": {
                "Cluster": 1
            },
            "classes": {
                "ClusterRouter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "routes/firewall/firewall.js": {
            "name": "routes/firewall/firewall.js",
            "modules": {
                "Firewall": 1
            },
            "classes": {
                "FirewallRouter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "routes/fwcloud/fwcloud.js": {
            "name": "routes/fwcloud/fwcloud.js",
            "modules": {
                "Fwcloud": 1
            },
            "classes": {
                "FwcloudRouter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "routes/ipobj/ipobj.js": {
            "name": "routes/ipobj/ipobj.js",
            "modules": {
                "Ipobjs": 1
            },
            "classes": {
                "IpobjsRouter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "routes/policy/compile.js": {
            "name": "routes/policy/compile.js",
            "modules": {
                "Compile": 1
            },
            "classes": {
                "CompileRouter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "routes/policy/install.js": {
            "name": "routes/policy/install.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "routes/vpn/openvpn.js": {
            "name": "routes/vpn/openvpn.js",
            "modules": {
                "OpenVPN": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "routes/vpn/pki.js": {
            "name": "routes/vpn/pki.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "FirewallExport": {
            "name": "FirewallExport",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "models/firewall/export.js",
            "line": 2,
            "description": "Module to manage Firewalls export process",
            "requires": [
                "db"
            ]
        },
        "Firewall": {
            "name": "Firewall",
            "submodules": {},
            "elements": {},
            "classes": {
                "FirewallModel": 1,
                "FirewallRouter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "routes/firewall/firewall.js",
            "line": 10,
            "description": "Module to routing Firewalls requests\n<br>BASE ROUTE CALL: <b>/firewalls</b>",
            "requires": [
                "db"
            ]
        },
        "Fwcloud": {
            "name": "Fwcloud",
            "submodules": {},
            "elements": {},
            "classes": {
                "FwcloudModel": 1,
                "FwcloudRouter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "routes/fwcloud/fwcloud.js",
            "line": 10,
            "description": "Module to routing FWCloud requests\n<br>BASE ROUTE CALL: <b>/fwclouds</b>",
            "requires": [
                "db"
            ]
        },
        "Ipobjs": {
            "name": "Ipobjs",
            "submodules": {},
            "elements": {},
            "classes": {
                "IpobjModel": 1,
                "IpobjsRouter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "routes/ipobj/ipobj.js",
            "line": 12,
            "description": "ROUTE Module to routing IPOBJ requests\n<br>BASE ROUTE CALL: <b>/ipobjs</b>",
            "requires": [
                "db"
            ]
        },
        "Cluster": {
            "name": "Cluster",
            "submodules": {},
            "elements": {},
            "classes": {
                "ClusterRouter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "routes/firewall/cluster.js",
            "line": 13,
            "description": "Module to routing CLUSTER requests\n<br>BASE ROUTE CALL: <b>/clusters</b>",
            "requires": [
                "express",
                "Clustermodel"
            ]
        },
        "Compile": {
            "name": "Compile",
            "submodules": {},
            "elements": {},
            "classes": {
                "CompileRouter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "routes/policy/compile.js",
            "line": 13,
            "description": "Module to routing COMPILE requests\n<br>BASE ROUTE CALL: <b>/policy/compile</b>",
            "requires": [
                "express",
                "Policy_rModel"
            ]
        },
        "OpenVPN": {
            "name": "OpenVPN",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "routes/vpn/openvpn.js",
            "line": 1,
            "description": "Module to routing OpenVPN requests\n<br>BASE ROUTE CALL: <b>/vpn/openvpn</b>",
            "requires": [
                "express",
                "openvpnModel"
            ]
        }
    },
    "classes": {
        "FirewallModel": {
            "name": "FirewallModel",
            "shortname": "FirewallModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firewall",
            "namespace": "",
            "file": "models/firewall/firewall.js",
            "line": 11,
            "description": "Class to manage firewalls data",
            "uses": [
                "db"
            ]
        },
        "FwcloudModel": {
            "name": "FwcloudModel",
            "shortname": "FwcloudModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Fwcloud",
            "namespace": "",
            "file": "models/fwcloud/fwcloud.js",
            "line": 12,
            "description": "Class to manage fwclouds data",
            "uses": [
                "db"
            ]
        },
        "IpobjModel": {
            "name": "IpobjModel",
            "shortname": "IpobjModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ipobjs",
            "namespace": "",
            "file": "models/ipobj/ipobj.js",
            "line": 9,
            "description": "## Class to manage IPOBJ DATA"
        },
        "ClusterRouter": {
            "name": "ClusterRouter",
            "shortname": "ClusterRouter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Cluster",
            "namespace": "",
            "file": "routes/firewall/cluster.js",
            "line": 13,
            "description": "Clase to manage CLUSTER DATA"
        },
        "FirewallRouter": {
            "name": "FirewallRouter",
            "shortname": "FirewallRouter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firewall",
            "namespace": "",
            "file": "routes/firewall/firewall.js",
            "line": 10,
            "description": "Class to manage firewalls routing"
        },
        "FwcloudRouter": {
            "name": "FwcloudRouter",
            "shortname": "FwcloudRouter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Fwcloud",
            "namespace": "",
            "file": "routes/fwcloud/fwcloud.js",
            "line": 10,
            "description": "Class to manage fwcloud routing"
        },
        "IpobjsRouter": {
            "name": "IpobjsRouter",
            "shortname": "IpobjsRouter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ipobjs",
            "namespace": "",
            "file": "routes/ipobj/ipobj.js",
            "line": 12,
            "description": "Class to manage IPOBJ routing"
        },
        "CompileRouter": {
            "name": "CompileRouter",
            "shortname": "CompileRouter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Compile",
            "namespace": "",
            "file": "routes/policy/compile.js",
            "line": 13,
            "description": "Class to manage Compile Policy"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "models/firewall/export.js",
            "line": 148,
            "description": "Export firewall data",
            "class": "FirewallModel",
            "module": "FirewallExport"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 21,
            "description": "Property Table",
            "itemtype": "property",
            "name": "tableModel",
            "type": "\"firewall\"",
            "access": "private",
            "tagname": "",
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 40,
            "description": "Get Firewalls by User",
            "itemtype": "method",
            "name": "getFirewalls",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `ARRAY OBJECT FIREWALL DATA` \n\nTable: __firewall__\n\n          id\tint(11) AI PK\n          cluster\tint(11)\n          fwcloud\tint(11)\n          name\tvarchar(255)\n          comment\tlongtext\n          created_at\tdatetime\n          updated_at\tdatetime\n          by_user\tint(11)",
                "type": "ARRAY of Firewall objects"
            },
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 91,
            "description": "Get Firewalls by User and ID",
            "itemtype": "method",
            "name": "getFirewall",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "firewall identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `OBJECT FIREWALL DATA` \n\nTable: __firewall__\n\n          id\tint(11) AI PK\n          cluster\tint(11)\n          fwcloud\tint(11)\n          name\tvarchar(255)\n          comment\tlongtext\n          created_at\tdatetime\n          updated_at\tdatetime\n          by_user\tint(11)",
                "type": "Firewall object"
            },
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 136,
            "description": "Get Firewall SSH connection data",
            "itemtype": "method",
            "name": "getFirewallSSH",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "firewall identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `OBJECT FIREWALL DATA` \n\nTable: __firewall__\n\n          id\tint(11) AI PK\n          cluster\tint(11)\n          fwcloud\tint(11)\n          name\tvarchar(255)\n          comment\tlongtext\n          created_at\tdatetime\n          updated_at\tdatetime\n          by_user\tint(11)",
                "type": "Firewall object"
            },
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 189,
            "description": "Get Firewall Access by Locked",
            "itemtype": "method",
            "name": "getFirewallLockedAccess",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "idfirewall",
                    "description": "firewall identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "fwcloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `LOCKED STATUS`",
                "type": "Boolean"
            },
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 223,
            "description": "Get Firewalls by User and Cluster",
            "itemtype": "method",
            "name": "getFirewallCluster",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "idcluster",
                    "description": "Cluster identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `ARRAY OBJECT FIREWALL DATA` \n\nTable: __firewall__\n\n          id\tint(11) AI PK\n          cluster\tint(11)\n          fwcloud\tint(11)\n          name\tvarchar(255)\n          comment\tlongtext\n          created_at\tdatetime\n          updated_at\tdatetime\n          by_user\tint(11)",
                "type": "ARRAY of Firewall objects"
            },
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 310,
            "description": "Get Firewalls by User and Cloud",
            "itemtype": "method",
            "name": "getFirewallCloud",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "idCloud",
                    "description": "Cloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `ARRAY OBJECT FIREWALL DATA` \n\nTable: __firewall__\n\n          id\tint(11) AI PK\n          cluster\tint(11)\n          fwcloud\tint(11)\n          name\tvarchar(255)\n          comment\tlongtext\n          created_at\tdatetime\n          updated_at\tdatetime\n          by_user\tint(11)",
                "type": "ARRAY of Firewall objects"
            },
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 360,
            "description": "ADD New Firewall",
            "itemtype": "method",
            "name": "insertFirewall",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "firewallData",
                    "description": "Firewall Object data",
                    "type": "Firewall Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "",
                            "type": "NULL"
                        },
                        {
                            "name": "cluster",
                            "description": "Cluster ID",
                            "type": "Integer"
                        },
                        {
                            "name": "fwcloud",
                            "description": "FWcloud ID",
                            "type": "Integer"
                        },
                        {
                            "name": "name",
                            "description": "Firewall Name",
                            "type": "String"
                        },
                        {
                            "name": "comment",
                            "description": "comment text",
                            "type": "String",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CALLBACK RESPONSE"
            },
            "example": [
                "\n#### RESPONSE OK:\n   \n      callback(null, {\"insertId\": fwid});\n      \n#### RESPONSE ERROR:\n   \n      callback(error, null);\n      "
            ],
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 415,
            "description": "UPDATE Firewall",
            "itemtype": "method",
            "name": "updateFirewall",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "firewallData",
                    "description": "Firewall Object data",
                    "type": "Firewall Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "",
                            "type": "NULL"
                        },
                        {
                            "name": "cluster",
                            "description": "Cluster ID",
                            "type": "Integer"
                        },
                        {
                            "name": "fwcloud",
                            "description": "FWcloud ID",
                            "type": "Integer"
                        },
                        {
                            "name": "name",
                            "description": "Firewall Name",
                            "type": "String"
                        },
                        {
                            "name": "comment",
                            "description": "comment text",
                            "type": "String",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CALLBACK RESPONSE"
            },
            "example": [
                "\n#### RESPONSE OK:\n   \n      callback(null, {\"result\": true});\n      \n#### RESPONSE ERROR:\n   \n      callback(error, null);\n      "
            ],
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 684,
            "description": "UPDATE Firewall lock status",
            "itemtype": "method",
            "name": "updateFirewallLock",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "firewallData",
                    "description": "Firewall Object data",
                    "type": "Firewall Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "",
                            "type": "NULL"
                        },
                        {
                            "name": "fwcloud",
                            "description": "FWcloud ID",
                            "type": "Integer"
                        },
                        {
                            "name": "locked",
                            "description": "Locked status",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CALLBACK RESPONSE"
            },
            "example": [
                "\n#### RESPONSE OK:\n   \n      callback(null, {\"result\": true});\n      \n#### RESPONSE ERROR:\n   \n      callback(error, null);\n      "
            ],
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 740,
            "description": "UNLOCK Firewall status",
            "itemtype": "method",
            "name": "updateFirewallUnlock",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "firewallData",
                    "description": "Firewall Object data",
                    "type": "Firewall Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "",
                            "type": "NULL"
                        },
                        {
                            "name": "fwcloud",
                            "description": "FWcloud ID",
                            "type": "Integer"
                        },
                        {
                            "name": "locked",
                            "description": "Locked status",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CALLBACK RESPONSE"
            },
            "example": [
                "\n#### RESPONSE OK:\n   \n      callback(null, {\"result\": true});\n      \n#### RESPONSE ERROR:\n   \n      callback(error, null);\n      "
            ],
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/firewall/firewall.js",
            "line": 808,
            "description": "DELETE Firewall",
            "itemtype": "method",
            "name": "deleteFirewall",
            "params": [
                {
                    "name": "user",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "Firewall identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CALLBACK RESPONSE"
            },
            "example": [
                "\n#### RESPONSE OK:\n   \n      callback(null, {\"result\": true, \"msg\": \"deleted\"});\n      \n#### RESPONSE ERROR:\n   \n      callback(null, {\"result\": false});\n      "
            ],
            "class": "FirewallModel",
            "module": "Firewall"
        },
        {
            "file": "models/fwcloud/fwcloud.js",
            "line": 27,
            "description": "Property Table",
            "itemtype": "property",
            "name": "tableModel",
            "type": "\"fwcloud\"",
            "access": "private",
            "tagname": "",
            "class": "FwcloudModel",
            "module": "Fwcloud"
        },
        {
            "file": "models/fwcloud/fwcloud.js",
            "line": 42,
            "description": "Get Fwcloud by User",
            "itemtype": "method",
            "name": "getFwcloud",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `ARRAY OBJECT FWCLOUD DATA` \n\nTable: __fwcloud__\n\n          id\tint(11) AI PK\n          cluster\tint(11)\n          fwcloud\tint(11)\n          name\tvarchar(255)\n          comment\tlongtext\n          created_at\tdatetime\n          updated_at\tdatetime\n          by_user\tint(11)",
                "type": "ARRAY of Fwcloud objects"
            },
            "class": "FwcloudModel",
            "module": "Fwcloud"
        },
        {
            "file": "models/fwcloud/fwcloud.js",
            "line": 85,
            "description": "Get Fwcloud by User and ID",
            "itemtype": "method",
            "name": "getFwcloud",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "fwcloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `OBJECT FWCLOUD DATA` \n\nTable: __fwcloud__\n\n          id\tint(11) AI PK\n          cluster\tint(11)\n          fwcloud\tint(11)\n          name\tvarchar(255)\n          comment\tlongtext\n          created_at\tdatetime\n          updated_at\tdatetime\n          by_user\tint(11)",
                "type": "Fwcloud object"
            },
            "class": "FwcloudModel",
            "module": "Fwcloud"
        },
        {
            "file": "models/fwcloud/fwcloud.js",
            "line": 126,
            "description": "Get Fwcloud Access by Locked",
            "itemtype": "method",
            "name": "getFwcloudLockedAccess",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "fwcloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `LOCKED STATUS`",
                "type": "Boolean"
            },
            "class": "FwcloudModel",
            "module": "Fwcloud"
        },
        {
            "file": "models/fwcloud/fwcloud.js",
            "line": 176,
            "description": "Check Fwcloud locked timeout",
            "itemtype": "method",
            "name": "getFwcloudLockedTimeout",
            "params": [
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns `RESULT UNLOCKED`",
                "type": "Boolean"
            },
            "class": "FwcloudModel",
            "module": "Fwcloud"
        },
        {
            "file": "models/fwcloud/fwcloud.js",
            "line": 217,
            "description": "ADD New Fwcloud",
            "itemtype": "method",
            "name": "insertFwcloud",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloudData",
                    "description": "Fwcloud Object data",
                    "type": "Fwcloud Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "",
                            "type": "NULL"
                        },
                        {
                            "name": "name",
                            "description": "Fwcloud Name",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CALLBACK RESPONSE"
            },
            "example": [
                "\n#### RESPONSE OK:\n   \n      callback(null, {\"insertId\": fwid});\n      \n#### RESPONSE ERROR:\n   \n      callback(error, null);\n      "
            ],
            "class": "FwcloudModel",
            "module": "Fwcloud"
        },
        {
            "file": "models/fwcloud/fwcloud.js",
            "line": 266,
            "description": "UPDATE Fwcloud",
            "itemtype": "method",
            "name": "updateFwcloud",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloudData",
                    "description": "Fwcloud Object data",
                    "type": "Fwcloud Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "",
                            "type": "NULL"
                        },
                        {
                            "name": "name",
                            "description": "Fwcloud Name",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CALLBACK RESPONSE"
            },
            "example": [
                "\n#### RESPONSE OK:\n   \n      callback(null, {\"result\": true});\n      \n#### RESPONSE ERROR:\n   \n      callback(error, null);\n      "
            ],
            "class": "FwcloudModel",
            "module": "Fwcloud"
        },
        {
            "file": "models/fwcloud/fwcloud.js",
            "line": 311,
            "description": "UPDATE Fwcloud lock status",
            "itemtype": "method",
            "name": "updateFwcloudLock",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloudData",
                    "description": "Fwcloud Object data",
                    "type": "Fwcloud Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "",
                            "type": "NULL"
                        },
                        {
                            "name": "fwcloud",
                            "description": "FWcloud ID",
                            "type": "Integer"
                        },
                        {
                            "name": "locked",
                            "description": "Locked status",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CALLBACK RESPONSE"
            },
            "example": [
                "\n#### RESPONSE OK:\n   \n      callback(null, {\"result\": true});\n      \n#### RESPONSE ERROR:\n   \n      callback(error, null);\n      "
            ],
            "class": "FwcloudModel",
            "module": "Fwcloud"
        },
        {
            "file": "models/fwcloud/fwcloud.js",
            "line": 396,
            "description": "UNLOCK Fwcloud status",
            "itemtype": "method",
            "name": "updateFwcloudUnlock",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloudData",
                    "description": "Fwcloud Object data",
                    "type": "Fwcloud Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "",
                            "type": "NULL"
                        },
                        {
                            "name": "fwcloud",
                            "description": "FWcloud ID",
                            "type": "Integer"
                        },
                        {
                            "name": "locked",
                            "description": "Locked status",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CALLBACK RESPONSE"
            },
            "example": [
                "\n#### RESPONSE OK:\n   \n      callback(null, {\"result\": true});\n      \n#### RESPONSE ERROR:\n   \n      callback(error, null);\n      "
            ],
            "class": "FwcloudModel",
            "module": "Fwcloud"
        },
        {
            "file": "models/fwcloud/fwcloud.js",
            "line": 454,
            "description": "DELETE Fwcloud",
            "itemtype": "method",
            "name": "deleteFwcloud",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "Fwcloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "Function callback response\n\n      callback(error, Rows)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "CALLBACK RESPONSE"
            },
            "example": [
                "\n#### RESPONSE OK:\n   \n      callback(null, {\"result\": true, \"msg\": \"deleted\"});\n      \n#### RESPONSE ERROR:\n   \n      callback(null, {\"result\": false});\n      "
            ],
            "class": "FwcloudModel",
            "module": "Fwcloud"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 20,
            "description": "Property to identify Data Object",
            "itemtype": "property",
            "name": "objModel",
            "type": "text",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 28,
            "description": "Property  to manage Dabase Access",
            "itemtype": "property",
            "name": "db",
            "type": "db",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 36,
            "description": "Property  to manage Ipobj in Rules",
            "itemtype": "property",
            "name": "Policy_r__ipobjModel",
            "type": "models.policy_r__ipobj",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 43,
            "description": "Property  to manage Interfaces in Rules",
            "itemtype": "property",
            "name": "Policy_r__interfaceModel",
            "type": "models.policy_r__interface",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 50,
            "description": "Property manage async process",
            "itemtype": "property",
            "name": "async",
            "type": "async",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 58,
            "description": "Property  to manage Interfaces Data",
            "itemtype": "property",
            "name": "InterfaceModel",
            "type": "models.interface",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 65,
            "description": "Property  to manage Ipobj host data",
            "itemtype": "property",
            "name": "host_Data",
            "type": "models.data_ipobj_host",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 72,
            "description": "Property  to manage Interface data",
            "itemtype": "property",
            "name": "interface_Data",
            "type": "models.data_interface",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 79,
            "description": "Property  to manage Ipobj  data",
            "itemtype": "property",
            "name": "ipobj_Data",
            "type": "models.data_ipobj",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 86,
            "description": "Property  to manage Ipobj in Groups",
            "itemtype": "property",
            "name": "Ipobj__ipobjgModel",
            "type": "models.ipobj__ipobjg",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 93,
            "description": "Property Model to manage API RESPONSE data",
            "itemtype": "property",
            "name": "api_resp",
            "type": "../../models/api_response",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 111,
            "description": "Property Table",
            "itemtype": "property",
            "name": "tableModel",
            "type": "\"ipobj\"",
            "access": "private",
            "tagname": "",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 121,
            "description": "Property Logger to manage App logs",
            "itemtype": "attribute",
            "name": "logger",
            "type": "log4js/app",
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 131,
            "description": "Get ipobj by Ipobj id",
            "itemtype": "method",
            "name": "getIpobj",
            "params": [
                {
                    "name": "req.body.fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "req.body.id",
                    "description": "Ipobj identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns ROW Data from Ipobj and FWC_TREE",
                "type": "ROW"
            },
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 235,
            "description": "Get ipobj by Ipobj id",
            "itemtype": "method",
            "name": "getIpobjPro",
            "params": [
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "Ipobj identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns ROW Data from Ipobj and FWC_TREE",
                "type": "ROW"
            },
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 373,
            "description": "Get ipobj HOST DATA and Interfaces and Ipobj bellow Interfaces",
            "itemtype": "method",
            "name": "getIpobj_Host_Full",
            "params": [
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "Ipobj identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns ROW Data from Ipobj_Host/Interfaces/Ipobjs",
                "type": "ROW"
            },
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 504,
            "description": "Get All ipobj by Group",
            "itemtype": "method",
            "name": "getAllIpobjsGroup",
            "params": [
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "idgroup",
                    "description": "Group identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns ROWS Data from Ipobj and FWC_TREE",
                "type": "ROWS"
            },
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 540,
            "description": "Get All ipobj by Interface",
            "itemtype": "method",
            "name": "getAllIpobjsInterface",
            "params": [
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "idinterface",
                    "description": "Interface identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns ROWS Data from Ipobj and FWC_TREE",
                "type": "ROWS"
            },
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 574,
            "description": "Get All ipobj by Interface PROMISE",
            "itemtype": "method",
            "name": "getAllIpobjsInterface",
            "params": [
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "idinterface",
                    "description": "Interface identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns ROWS Data from Ipobj and FWC_TREE",
                "type": "ROWS"
            },
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 618,
            "description": "Get ipobj by id and Group",
            "itemtype": "method",
            "name": "getIpobjGroup",
            "params": [
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "idgroup",
                    "description": "id Group identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "id ipobj identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns ROW Data from Ipobj",
                "type": "ROW"
            },
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 660,
            "description": "Add ipobj",
            "itemtype": "method",
            "name": "insertIpobj",
            "params": [
                {
                    "name": "ipobjData",
                    "description": "Ipobj Data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns JSON result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n     {result: true, \"insertId\": result.insertId}\n\n#### JSON RESPONSE ERROR:\n     {result: false, \"insertId\": ''}"
            ],
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 728,
            "description": "Update ipobj",
            "itemtype": "method",
            "name": "updateIpobj",
            "params": [
                {
                    "name": "ipobjData",
                    "description": "Ipobj Data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns JSON result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n     {result: true}\n\n#### JSON RESPONSE ERROR:\n     {result: false}"
            ],
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 775,
            "description": "### Delete ipobj",
            "itemtype": "method",
            "name": "deleteIpobj",
            "params": [
                {
                    "name": "id",
                    "description": "id ipobj identifier",
                    "type": "Integer"
                },
                {
                    "name": "type",
                    "description": "ipobj type",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns JSON result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n\n     {\"result\": true, \"msg\": \"deleted\"}\n\n#### JSON RESPONSE ERROR NOT EXIST:\n\n     {\"result\": false, \"msg\": \"notExist\"}\n     \n#### JSON RESPONSE RESTRICTED:\n\n     {\"result\": false, \"msg\": \"Restricted\", \"restrictions\": data.search}"
            ],
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 896,
            "description": "### check if IPOBJ Exists in any Group",
            "itemtype": "method",
            "name": "checkIpobjInGroup",
            "params": [
                {
                    "name": "ipobj",
                    "description": "id ipobj identifier",
                    "type": "Integer"
                },
                {
                    "name": "type",
                    "description": "ipobj type",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns JSON result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n\n     {\"result\": true};\n\n#### JSON RESPONSE ERROR NOT EXIST:\n\n     {\"result\": false};\n     "
            ],
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 945,
            "description": "### searchIpobjUsage\nSearch where is used IPOBJ in RULES, OpenVPN configs, etc.",
            "itemtype": "method",
            "name": "searchIpobjInRules",
            "params": [
                {
                    "name": "id",
                    "description": "id ipobj identifier",
                    "type": "Integer"
                },
                {
                    "name": "type",
                    "description": "ipobj type",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns JSON result",
                "type": "JSON"
            },
            "example": [
                " #### JSON RESPONSE OK\n\n         {\"result\": true, \"msg\": \"IPOBJ FOUND\", \n             \"search\":\n                 {   \"IpobjInRules\": data_ipobj, \n                     \"GroupInRules\": data_grouprule, \n                     \"IpobjInGroup\": data_group,\n                     \"InterfacesIpobjInRules\": data_interfaces, \n                     \"InterfacesFIpobjInRules\": data_interfaces_f,\n                     \"InterfacesAboveIpobjInRules\": data_interfaces_above,\n                     \"HostIpobjInterfacesIpobjInRules\": data_ipobj_host, \n                     \"IpobjInterfacesIpobjInRules\": data_ipobj_ipobj\n                 }\n         }\n\n#### JSON RESPONSE ERROR NOT EXIST:\n\n     {\"result\": false, \"msg\": \"IPOBJ NOT FOUND\", \n         \"search\": {\n\"IpobjInRules\": \"\", \n\"GroupInRules\": \"\",\n\"IpobjInGroup\": \"\", \n\"InterfacesIpobjInRules\": \"\", \n\"InterfacesFIpobjInRules\": \"\",\n\"InterfacesAboveIpobjInRules\": \"\",\n\"HostIpobjInterfacesIpobjInRules\": \"\", \n\"IpobjInterfacesIpobjInRules\": \"\"\n}\n}\n     "
            ],
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/ipobj/ipobj.js",
            "line": 1016,
            "description": "### searchIpobj\nSearch where is used IPOBJ",
            "itemtype": "method",
            "name": "searchIpobj",
            "params": [
                {
                    "name": "id",
                    "description": "id ipobj identifier",
                    "type": "Integer"
                },
                {
                    "name": "type",
                    "description": "ipobj type",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns JSON result",
                "type": "JSON"
            },
            "example": [
                " #### JSON RESPONSE OK\n\n         {\"result\": true, \"msg\": \"IPOBJ FOUND\", \n             \"search\": {\n                 \"IpobjInRules\": data_ipobj, \n                 \"IpobjInGroup\": data_group, \n                 \"IpobjInterfaces\": data_ipobj_interfaces\n                 }\n         }\n\n#### JSON RESPONSE ERROR NOT EXIST:\n\n     {\"result\": false, \"msg\": \"IPOBJ NOT FOUND\", \n             \"search\": {\n                 \"IpobjInRules\": \"\", \n                 \"IpobjInGroup\": \"\", \n                 \"IpobjInterfaces\": \"\"\n              }\n     }\n     "
            ],
            "class": "IpobjModel",
            "module": "Ipobjs"
        },
        {
            "file": "models/policy/policy_script.js",
            "line": 6,
            "description": "Property Model to manage Policy Compiled Data",
            "itemtype": "property",
            "name": "Policy_cModel",
            "type": "/models/policy_c",
            "class": "ClusterRouter",
            "module": "Ipobjs"
        },
        {
            "file": "models/policy/policy_script.js",
            "line": 14,
            "description": "Property Model to manage compilation process",
            "itemtype": "property",
            "name": "RuleCompileModel",
            "type": "/models/compile/",
            "class": "ClusterRouter",
            "module": "Ipobjs"
        },
        {
            "file": "models/policy/rule_compile.js",
            "line": 7,
            "description": "Property Model to manage Policy Data",
            "itemtype": "property",
            "name": "PolicyModel",
            "type": "../../models/policy/policy_r",
            "class": "ClusterRouter",
            "module": "Ipobjs"
        },
        {
            "file": "models/policy/rule_compile.js",
            "line": 15,
            "description": "Property Model to manage Policy Compiled Data",
            "itemtype": "property",
            "name": "Policy_cModel",
            "type": "../../models/policy_c",
            "class": "ClusterRouter",
            "module": "Ipobjs"
        },
        {
            "file": "models/policy/rule_compile.js",
            "line": 23,
            "description": "Property Logger to manage App logs",
            "itemtype": "property",
            "name": "logger",
            "type": "log4js/app",
            "class": "ClusterRouter",
            "module": "Ipobjs"
        },
        {
            "file": "models/policy/rule_compile.js",
            "line": 33,
            "description": "Property Model to manage API RESPONSE data",
            "itemtype": "property",
            "name": "api_resp",
            "type": "../../models/api_response",
            "class": "ClusterRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/firewall/cluster.js",
            "line": 20,
            "description": "Property  to manage express",
            "itemtype": "property",
            "name": "express",
            "type": "express",
            "class": "ClusterRouter",
            "module": "Cluster"
        },
        {
            "file": "routes/firewall/cluster.js",
            "line": 27,
            "description": "Property  to manage  route",
            "itemtype": "property",
            "name": "router",
            "type": "express.Router",
            "class": "ClusterRouter",
            "module": "Cluster"
        },
        {
            "file": "routes/firewall/cluster.js",
            "line": 36,
            "description": "Property Model to manage API RESPONSE data",
            "itemtype": "property",
            "name": "api_resp",
            "type": "../../models/api_response",
            "class": "ClusterRouter",
            "module": "Cluster"
        },
        {
            "file": "routes/firewall/cluster.js",
            "line": 45,
            "description": "Property to identify Data Object",
            "itemtype": "property",
            "name": "objModel",
            "type": "text",
            "class": "ClusterRouter",
            "module": "Cluster"
        },
        {
            "file": "routes/firewall/cluster.js",
            "line": 53,
            "description": "Property Model to manage Cluster Data",
            "itemtype": "property",
            "name": "ClusterModel",
            "type": "../../models/cluster",
            "class": "ClusterRouter",
            "module": "Cluster"
        },
        {
            "file": "routes/firewall/cluster.js",
            "line": 73,
            "description": "My method description.  Like other pieces of your comment blocks, \nthis can span multiple lines.\nROUTE CALL:  /",
            "itemtype": "method",
            "name": "getclusters",
            "params": [
                {
                    "name": "foo",
                    "description": "Argument 1",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "A config object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "name",
                            "description": "The name on the config object",
                            "type": "String"
                        },
                        {
                            "name": "callback",
                            "description": "A callback function on the config object",
                            "type": "Function"
                        }
                    ]
                },
                {
                    "name": "extra",
                    "description": "Do extra, optional work",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "ClusterRouter",
            "module": "Cluster"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 18,
            "description": "Property  to manage express",
            "itemtype": "property",
            "name": "express",
            "type": "express",
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 26,
            "description": "Property  to manage Firewall route",
            "itemtype": "property",
            "name": "router",
            "type": "express.Router",
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 34,
            "description": "Property Model to manage API RESPONSE data: {{#crossLinkModule \"api_response\"}}{{/crossLinkModule}}",
            "itemtype": "property",
            "name": "api_resp",
            "type": "api_respModel",
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 43,
            "description": "Property to identify Data Object",
            "itemtype": "property",
            "name": "objModel",
            "type": "text",
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 51,
            "description": "Property Model to manage Firewall Data",
            "itemtype": "property",
            "name": "FirewallModel",
            "type": "../../models/firewall/firewall",
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 62,
            "description": "Property Model to manage Fwcloud Data",
            "itemtype": "property",
            "name": "FwcloudModel",
            "type": "../../models/fwcloud",
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 72,
            "description": "Property Logger to manage App logs",
            "itemtype": "attribute",
            "name": "logger",
            "type": "log4js/app",
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 95,
            "description": "Get Firewalls by User\n\n\n> ROUTE CALL:  __/firewalls/:iduser__      \n> METHOD:  __GET__",
            "itemtype": "method",
            "name": "getFirewallByUser",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns `JSON` Data from Firewall",
                "type": "JSON"
            },
            "example": [
                " #### JSON RESPONSE\n   \n      {\"data\" : [\n         {  //Data Firewall 1       \n          \"id\" : ,            //Firewall Identifier\n          \"cluster\" : ,       //Cluster\n          \"fwcloud\" : ,       //Id Firewall cloud\n          \"name\" : ,          //Firewall name\n          \"comment\" : ,       //comment\n          \"created_at\" : ,    //Date Created\n          \"updated_at\" : ,    //Date Updated\n          \"by_user\" : ,       //User last update\n         },\n         {....}, //Data Firewall 2\n         {....}  //Data Firewall ...n \n        ]\n      };\n"
            ],
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 143,
            "description": "Get Firewalls by Cloud\n\n\n> ROUTE CALL:  __/firewalls/Cloud/__      \n> METHOD:  __GET__",
            "itemtype": "method",
            "name": "getFirewallByUser_and_Cloud",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "Cloud identifier",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns `JSON` Data from Firewall",
                "type": "JSON"
            },
            "example": [
                " #### JSON RESPONSE\n   \n      {\"data\" : [\n         {  //Data Firewall 1       \n          \"id\" : ,            //Firewall Identifier\n          \"cluster\" : ,       //Cluster\n          \"fwcloud\" : ,       //Id Firewall cloud\n          \"name\" : ,          //Firewall name\n          \"comment\" : ,       //comment\n          \"created_at\" : ,    //Date Created\n          \"updated_at\" : ,    //Date Updated\n          \"by_user\" : ,       //User last update\n         },\n         {....}, //Data Firewall 2\n         {....}  //Data Firewall ...n \n        ]\n      };\n"
            ],
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 193,
            "description": "Get Firewalls by User and ID\n\n\n> ROUTE CALL:  __/firewalls/:iduser/:id__      \n> METHOD:  __GET__",
            "itemtype": "method",
            "name": "getFirewallByUser_and_Id",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "firewall identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns `JSON` Data from Firewall",
                "type": "JSON"
            },
            "example": [
                " #### JSON RESPONSE\n   \n      {\"data\" : [\n         {  //Data Firewall        \n          \"id\" : ,            //Firewall Identifier\n          \"cluster\" : ,       //Cluster\n          \"fwcloud\" : ,       //Id Firewall cloud\n          \"name\" : ,          //Firewall name\n          \"comment\" : ,       //comment\n          \"created_at\" : ,    //Date Created\n          \"updated_at\" : ,    //Date Updated\n          \"compiled_at\" : ,   //Date Compiled\n          \"installed_at\" : ,  //Date Installed\n          \"by_user\" : ,       //User last update\n         }\n        ]\n      };\n"
            ],
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 237,
            "description": "Get Firewalls by Cluster\n\n\n> ROUTE CALL:  __/firewalls/:iduser/cluster/:idcluster__      \n> METHOD:  __GET__",
            "itemtype": "method",
            "name": "getFirewallByUser_and_Cluster",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "idcluster",
                    "description": "Cluster identifier",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns `JSON` Data from Firewall",
                "type": "JSON"
            },
            "example": [
                " #### JSON RESPONSE\n   \n      {\"data\" : [\n         {  //Data Firewall 1       \n          \"id\" : ,            //Firewall Identifier\n          \"cluster\" : ,       //Cluster\n          \"fwcloud\" : ,       //Id Firewall cloud\n          \"name\" : ,          //Firewall name\n          \"comment\" : ,       //comment\n          \"created_at\" : ,    //Date Created\n          \"updated_at\" : ,    //Date Updated\n          \"by_user\" : ,       //User last update\n         },\n         {....}, //Data Firewall 2\n         {....}  //Data Firewall ...n \n        ]\n      };\n"
            ],
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 287,
            "description": "CREATE New firewall\n\n\n> ROUTE CALL:  __/firewalls/firewall__      \n> METHOD:  __POST__",
            "itemtype": "method",
            "name": "AddFirewall",
            "params": [
                {
                    "name": "id",
                    "description": "Firewall identifier (AUTO)",
                    "type": "Integer"
                },
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "cluster",
                    "description": "Cluster identifier",
                    "type": "Integer"
                },
                {
                    "name": "name",
                    "description": "Firewall Name",
                    "type": "String"
                },
                {
                    "name": "comment",
                    "description": "Firewall comment",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns Json result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n   \n      {\"data\" : [\n         { \n          \"insertId : ID,   //firewall identifier           \n         }\n        ]\n      };\n      \n#### JSON RESPONSE ERROR:\n   \n      {\"data\" : [\n         { \n          \"msg : ERROR,   //Text Error\n         }\n        ]\n      };"
            ],
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 379,
            "description": "UPDATE firewall\n\n\n> ROUTE CALL:  __/firewalls/firewall__      \n> METHOD:  __PUT__",
            "itemtype": "method",
            "name": "UpdateFirewall",
            "params": [
                {
                    "name": "id",
                    "description": "Firewall identifier",
                    "type": "Integer"
                },
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "cluster",
                    "description": "Cluster identifier",
                    "type": "Integer"
                },
                {
                    "name": "name",
                    "description": "Firewall Name",
                    "type": "String"
                },
                {
                    "name": "comment",
                    "description": "Firewall comment",
                    "type": "String"
                }
            ],
            "optional": 1,
            "return": {
                "description": "Returns Json result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n   \n      {\"data\" : [\n         { \n          \"msg : \"success\",   //result\n         }\n        ]\n      };\n      \n#### JSON RESPONSE ERROR:\n   \n      {\"data\" : [\n         { \n          \"msg : ERROR,   //Text Error\n         }\n        ]\n      };"
            ],
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 538,
            "description": "Get Locked status of Firewall by ID and User\n\n<br>ROUTE CALL:  <b>/firewalls/:iduser/firewall/:id/locked</b>\n<br>METHOD: <b>GET</b>",
            "itemtype": "method",
            "name": "getLockedStatusFirewallByUser_and_ID_V2",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "Firewall identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns Json Data from Firewall",
                "type": "JSON"
            },
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 569,
            "description": "DELETE firewall\n\n\n> ROUTE CALL:  __/firewalls/firewall__      \n> METHOD:  __DELETE__",
            "itemtype": "method",
            "name": "DeleteFirewall",
            "params": [
                {
                    "name": "id",
                    "description": "Firewall identifier",
                    "type": "Integer"
                }
            ],
            "optional": 1,
            "return": {
                "description": "Returns Json result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n   \n      {\"data\" : [\n         { \n          \"msg : \"success\",   //result\n         }\n        ]\n      };\n      \n#### JSON RESPONSE ERROR:\n   \n      {\"data\" : [\n         { \n          \"msg : ERROR,   //Text Error\n         }\n        ]\n      };"
            ],
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/firewall/firewall.js",
            "line": 630,
            "description": "Get firewall export",
            "class": "FirewallRouter",
            "module": "Firewall"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 18,
            "description": "Property  to manage express",
            "itemtype": "property",
            "name": "express",
            "type": "express",
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 26,
            "description": "Property  to manage Fwcloud route",
            "itemtype": "property",
            "name": "router",
            "type": "express.Router",
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 34,
            "description": "Property Model to manage API RESPONSE data: {{#crossLinkModule \"api_response\"}}{{/crossLinkModule}}",
            "itemtype": "property",
            "name": "api_resp",
            "type": "api_respModel",
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 43,
            "description": "Property to identify Data Object",
            "itemtype": "property",
            "name": "objModel",
            "type": "text",
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 51,
            "description": "Property Model to manage Fwcloud Data",
            "itemtype": "property",
            "name": "FwcloudModel",
            "type": "../../models/fwcloud",
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 61,
            "description": "Property Logger to manage App logs",
            "itemtype": "attribute",
            "name": "logger",
            "type": "log4js/app",
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 77,
            "description": "Get Fwclouds by User\n\n\n> ROUTE CALL:  __/:iduser__      \n> METHOD:  __GET__",
            "itemtype": "method",
            "name": "getFwcloudByUser",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns `JSON` Data from Fwcloud",
                "type": "JSON"
            },
            "example": [
                " #### JSON RESPONSE\n   \n      {\"data\" : [\n         {  //Data Fwcloud 1       \n          \"id\" : ,            //Fwcloud Identifier\n          \"created_at\" : ,    //Date Created\n          \"updated_at\" : ,    //Date Updated\n          \"updated_by\" : ,   //User last update\n         },\n         {....}, //Data Fwcloud 2\n         {....}  //Data Fwcloud ...n \n        ]\n      };\n"
            ],
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 114,
            "description": "Get Fwclouds by ID and User\n\n<br>ROUTE CALL:  <b>/get</b>\n<br>METHOD: <b>PUT</b>",
            "itemtype": "method",
            "name": "getFwcloudByUser_and_ID_V2",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "Fwcloud identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns Json Data from Fwcloud",
                "type": "JSON"
            },
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 137,
            "description": "CREATE New fwcloud\n\n\n> ROUTE CALL:  __/fwcloud/fwcloud__      \n> METHOD:  __POST__",
            "itemtype": "method",
            "name": "AddFwcloud",
            "params": [
                {
                    "name": "id",
                    "description": "Fwcloud identifier (AUTO)",
                    "type": "Integer"
                },
                {
                    "name": "name",
                    "description": "Fwcloud Name",
                    "type": "String"
                },
                {
                    "name": "comment",
                    "description": "Fwcloud comment",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns Json result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n   \n      {\"data\" : [\n         { \n          \"insertId : ID,   //fwcloud identifier           \n         }\n        ]\n      };\n      \n#### JSON RESPONSE ERROR:\n   \n      {\"data\" : [\n         { \n          \"msg : ERROR,   //Text Error\n         }\n        ]\n      };"
            ],
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 197,
            "description": "UPDATE fwcloud\n\n\n> ROUTE CALL:  __/fwcloud/fwcloud__      \n> METHOD:  __PUT__",
            "itemtype": "method",
            "name": "UpdateFwcloud",
            "params": [
                {
                    "name": "id",
                    "description": "Fwcloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "name",
                    "description": "Fwcloud Name",
                    "type": "String"
                }
            ],
            "optional": 1,
            "return": {
                "description": "Returns Json result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n   \n      {\"data\" : [\n         { \n          \"msg : \"success\",   //result\n         }\n        ]\n      };\n      \n#### JSON RESPONSE ERROR:\n   \n      {\"data\" : [\n         { \n          \"msg : ERROR,   //Text Error\n         }\n        ]\n      };"
            ],
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 255,
            "description": "DELETE fwcloud\n\n\n> ROUTE CALL:  __/fwcloud/fwcloud__      \n> METHOD:  __DELETE__",
            "itemtype": "method",
            "name": "DeleteFwcloud",
            "params": [
                {
                    "name": "fwcloud",
                    "description": "Fwcloud identifier",
                    "type": "Integer"
                }
            ],
            "optional": 1,
            "return": {
                "description": "Returns Json result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n   \n      {\"data\" : [\n         { \n          \"msg : \"success\",   //result\n         }\n        ]\n      };\n      \n#### JSON RESPONSE ERROR:\n   \n      {\"data\" : [\n         { \n          \"msg : ERROR,   //Text Error\n         }\n        ]\n      };"
            ],
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 306,
            "description": "Lock fwcloud status\n\n\n> ROUTE CALL:  __/fwcloud/fwcloud/lock__      \n> METHOD:  __PUT__",
            "itemtype": "method",
            "name": "UpdateFwcloudLock",
            "params": [
                {
                    "name": "fwcloud",
                    "description": "Fwcloud id",
                    "type": "Integer"
                },
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                }
            ],
            "optional": 1,
            "return": {
                "description": "Returns Json result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n   \n      {\"data\" : [\n         { \n          \"msg : \"success\",   //result\n         }\n        ]\n      };\n      \n#### JSON RESPONSE ERROR:\n   \n      {\"data\" : [\n         { \n          \"msg : ERROR,   //Text Error\n         }\n        ]\n      };"
            ],
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 368,
            "description": "Unlock fwcloud status\n\n\n> ROUTE CALL:  __/fwcloud/fwcloud/unlock__      \n> METHOD:  __PUT__",
            "itemtype": "method",
            "name": "UpdateFwcloudUnlock",
            "params": [
                {
                    "name": "fwcloud",
                    "description": "Fwcloud cloud",
                    "type": "Integer"
                },
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                }
            ],
            "optional": 1,
            "return": {
                "description": "Returns Json result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n   \n      {\"data\" : [\n         { \n          \"msg : \"success\",   //result\n         }\n        ]\n      };\n      \n#### JSON RESPONSE ERROR:\n   \n      {\"data\" : [\n         { \n          \"msg : ERROR,   //Text Error\n         }\n        ]\n      };"
            ],
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/fwcloud/fwcloud.js",
            "line": 428,
            "description": "Get Locked status of Fwcloud by ID and User\n\n<br>ROUTE CALL:  <b>/locked</b>\n<br>METHOD: <b>GET</b>",
            "itemtype": "method",
            "name": "getLockedStatusFwcloudByUser_and_ID",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "Fwcloud identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns Json Data from Fwcloud",
                "type": "JSON"
            },
            "class": "FwcloudRouter",
            "module": "Fwcloud"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 19,
            "description": "Property  to manage express",
            "itemtype": "property",
            "name": "express",
            "type": "express",
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 27,
            "description": "Property  to manage IPOBJ route",
            "itemtype": "property",
            "name": "router",
            "type": "express.Router",
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 35,
            "description": "Property Model to manage IPOBJ Data",
            "itemtype": "property",
            "name": "IpobjlModel",
            "type": "../../models/ipobj/ipobj",
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 44,
            "description": "Property Model to manage FWC_TREE Data",
            "itemtype": "property",
            "name": "fwcTreemodel",
            "type": "../../models/tree/fwc_tree",
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 53,
            "description": "Property Model to manage API RESPONSE data",
            "itemtype": "property",
            "name": "api_resp",
            "type": "../../models/api_response",
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 62,
            "description": "Property to identify Data Object",
            "itemtype": "property",
            "name": "objModel",
            "type": "text",
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 78,
            "description": "#### Create new ipobj\nCrea un nuevo objeto en el Cloud que se le pasa.\nSe le pasa tambien los datos del Nodo en el arbol de navegación para que una vez \nañadido el objeto se enlace al nodo del árbol\n\n\n> ROUTE CALL:  __/ipobjs/ipobj/:node_parent/:node_order/:node_type__      \n> METHOD:  __POST__",
            "itemtype": "method",
            "name": "NewIpobj",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "node_parent",
                    "description": "Node parent to insert object",
                    "type": "Integer"
                },
                {
                    "name": "node_order",
                    "description": "Node order",
                    "type": "Integer"
                },
                {
                    "name": "node_type",
                    "description": "Node type\n\n#### POST PARAMETERS",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "interface",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "protocol",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "address",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "netmask",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "diff_serv",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "ip_version",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "code",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "tcp_flags_mask",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "tcp_flags_settings",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "range_start",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "range_end",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "source_port_start",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "source_port_end",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "destination_port_start",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "destination_port_end",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "comment",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns `JSON` Result\n* * @example \n#### JSON RESPONSE OK:\n   \n     {\"response\": {\n       \"respStatus\": true,\n       \"respCode\": \"ACR_INSERTED_OK\",\n       \"respCodeMsg\": \"\",\n       \"respMsg\": \"\",\n       \"errorCode\": \"\",\n       \"errorMsg\": \"\"\n     },\n     \"data\": {}\n     };\n      \n#### JSON RESPONSE ERROR:\n   \n     {\"response\": {\n       \"respStatus\": false,\n       \"respCode\": \"ACR_ERROR\",\n       \"respCodeMsg\": \"\",\n       \"respMsg\": \"\",\n       \"errorCode\": \"\",\n       \"errorMsg\": \"\"\n     },\n     \"data\": {}\n     };",
                "type": "JSON"
            },
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 201,
            "description": "#### Update Ipobj\nActualiza los datos de un IPOBJ.\n\n\n> ROUTE CALL:  __/ipobjs/ipobj__      \n> METHOD:  __PUT__",
            "itemtype": "method",
            "name": "UpdateIpobj",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier\n\n#### POST PARAMETERS",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "interface",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "protocol",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "address",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "netmask",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "diff_serv",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "ip_version",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "icmp_code",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "tcp_flags_mask",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "tcp_flags_settings",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "range_start",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "range_end",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "source_port_start",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "source_port_end",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "destination_port_start",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "destination_port_end",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "comment",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns `JSON` Data from Search\n* @example \n#### JSON RESPONSE OK:\n   \n     {\"response\": {\n       \"respStatus\": true,\n       \"respCode\": \"ACR_UPDATED_OK\",\n       \"respCodeMsg\": \"\",\n       \"respMsg\": \"\",\n       \"errorCode\": \"\",\n       \"errorMsg\": \"\"\n     },\n     \"data\": {}\n     };\n      \n#### JSON RESPONSE ERROR:\n   \n     {\"response\": {\n       \"respStatus\": false,\n       \"respCode\": \"ACR_ERROR\",\n       \"respCodeMsg\": \"\",\n       \"respMsg\": \"\",\n       \"errorCode\": \"\",\n       \"errorMsg\": \"\"\n     },\n     \"data\": {}\n     };",
                "type": "JSON"
            },
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 319,
            "description": "Get ipobj by Ipobj id\n\n\n> ROUTE CALL:  __/ipobjs/:id__      \n> METHOD:  __GET__",
            "itemtype": "method",
            "name": "getIpobjById",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "Ipobj identifier",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns `JSON` Data from Ipobj",
                "type": "JSON"
            },
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 345,
            "description": "DELETE IPOBJ\n\n\n> ROUTE CALL:  __/ipobjs/ipobj/:id/:type__      \n> METHOD:  __DELETE__",
            "itemtype": "method",
            "name": "DeleteIpobj",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "Ipobj identifier",
                    "type": "Integer"
                },
                {
                    "name": "type",
                    "description": "Ipobj type",
                    "type": "Integer"
                }
            ],
            "optional": 1,
            "return": {
                "description": "Returns Json result",
                "type": "JSON"
            },
            "example": [
                " \n#### JSON RESPONSE OK:\n   \n     {\"response\": {\n       \"respStatus\": true,\n       \"respCode\": \"ACR_DELETED_OK\",\n       \"respCodeMsg\": \"\",\n       \"respMsg\": \"\",\n       \"errorCode\": \"\",\n       \"errorMsg\": \"\"\n     },\n     \"data\": {}\n     };\n      \n#### JSON RESPONSE ERROR:\n   \n     {\"response\": {\n       \"respStatus\": false,\n       \"respCode\": \"ACR_ERROR\",\n       \"respCodeMsg\": \"\",\n       \"respMsg\": \"\",\n       \"errorCode\": \"\",\n       \"errorMsg\": \"\"\n     },\n     \"data\": {}\n     };"
            ],
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/ipobj/ipobj.js",
            "line": 419,
            "description": "Search where ipobj is Used\n\n\n> ROUTE CALL:  __/ipobjs/ipobj_search_used/:id/:type__      \n> METHOD:  __GET__",
            "itemtype": "method",
            "name": "SearchIpobjWhereUsed",
            "params": [
                {
                    "name": "iduser",
                    "description": "User identifier",
                    "type": "Integer"
                },
                {
                    "name": "fwcloud",
                    "description": "FwCloud identifier",
                    "type": "Integer"
                },
                {
                    "name": "id",
                    "description": "Ipobj identifier",
                    "type": "Integer"
                },
                {
                    "name": "type",
                    "description": "Ipobj type",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Returns `JSON` Data from Search",
                "type": "JSON"
            },
            "class": "IpobjsRouter",
            "module": "Ipobjs"
        },
        {
            "file": "routes/policy/compile.js",
            "line": 20,
            "description": "Property  to manage express",
            "itemtype": "property",
            "name": "express",
            "type": "express",
            "class": "CompileRouter",
            "module": "Compile"
        },
        {
            "file": "routes/policy/compile.js",
            "line": 27,
            "description": "Property  to manage  route",
            "itemtype": "property",
            "name": "router",
            "type": "express.Router",
            "class": "CompileRouter",
            "module": "Compile"
        },
        {
            "file": "routes/policy/compile.js",
            "line": 35,
            "description": "Property Logger to manage App logs",
            "itemtype": "property",
            "name": "logger",
            "type": "log4js/app",
            "class": "CompileRouter",
            "module": "Compile"
        },
        {
            "file": "routes/policy/compile.js",
            "line": 43,
            "description": "Property Model to manage API RESPONSE data",
            "itemtype": "property",
            "name": "api_resp",
            "type": "../../models/api_response",
            "class": "CompileRouter",
            "module": "Compile"
        },
        {
            "file": "routes/policy/compile.js",
            "line": 52,
            "description": "Property Model to manage compilation process",
            "itemtype": "property",
            "name": "RuleCompileModel",
            "type": "../../models/compile/",
            "class": "CompileRouter",
            "module": "Compile"
        },
        {
            "file": "routes/policy/compile.js",
            "line": 60,
            "description": "Property Model to manage policy script generation and install process",
            "itemtype": "property",
            "name": "PolicyScript",
            "type": "../../models/compile/",
            "class": "CompileRouter",
            "module": "Compile"
        },
        {
            "file": "routes/policy/install.js",
            "line": 12,
            "description": "Property  to manage express",
            "itemtype": "property",
            "name": "express",
            "type": "express",
            "class": "",
            "module": "Compile"
        },
        {
            "file": "routes/policy/install.js",
            "line": 19,
            "description": "Property  to manage  route",
            "itemtype": "property",
            "name": "router",
            "type": "express.Router",
            "class": "",
            "module": "Compile"
        },
        {
            "file": "routes/policy/install.js",
            "line": 27,
            "description": "Property Model to manage API RESPONSE data",
            "itemtype": "property",
            "name": "api_resp",
            "type": "../../models/api_response",
            "class": "",
            "module": "Compile"
        },
        {
            "file": "routes/policy/install.js",
            "line": 36,
            "description": "Property Model to manage policy script generation and install process",
            "itemtype": "property",
            "name": "PolicyScript",
            "type": "../../models/compile/",
            "class": "",
            "module": "Compile"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 12,
            "description": "Property  to manage express",
            "itemtype": "property",
            "name": "express",
            "type": "express",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 19,
            "description": "Property  to manage  route",
            "itemtype": "property",
            "name": "router",
            "type": "express.Router",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 28,
            "description": "Property Model to manage API RESPONSE data",
            "itemtype": "property",
            "name": "api_resp",
            "type": "../../models/api_response",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 37,
            "description": "Property to identify Data Object",
            "itemtype": "property",
            "name": "objModel",
            "type": "text",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 45,
            "description": "Property Model to manage OpenVPN Data",
            "itemtype": "property",
            "name": "ClusterModel",
            "type": "../../models/vpn/openvpn",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 59,
            "description": "Create a new OpenVPN configuration in firewall.",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 111,
            "description": "Update configuration options.",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 135,
            "description": "Get OpenVPN configuration data.",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 146,
            "description": "Get OpenVPN configuration files.",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 157,
            "description": "Get next VPN LAN free IP.",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 168,
            "description": "Delete OpenVPN configuration.",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/openvpn.js",
            "line": 191,
            "description": "Install OpenVPN configuration in the destination firewall.",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/pki.js",
            "line": 12,
            "description": "Property  to manage express",
            "itemtype": "property",
            "name": "express",
            "type": "express",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/pki.js",
            "line": 19,
            "description": "Property  to manage  route",
            "itemtype": "property",
            "name": "router",
            "type": "express.Router",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/pki.js",
            "line": 28,
            "description": "Property Model to manage API RESPONSE data",
            "itemtype": "property",
            "name": "api_resp",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/pki.js",
            "line": 36,
            "description": "Property to identify Data Object",
            "itemtype": "property",
            "name": "objModel",
            "type": "text",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/pki.js",
            "line": 50,
            "description": "Create a new CA (Certification Authority).",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/pki.js",
            "line": 89,
            "description": "Delete ca.",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/pki.js",
            "line": 112,
            "description": "Create a new certificate.",
            "class": "",
            "module": "OpenVPN"
        },
        {
            "file": "routes/vpn/pki.js",
            "line": 146,
            "description": "Delete certificate.",
            "class": "",
            "module": "OpenVPN"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nExport firewall data",
            "line": " models/firewall/export.js:148"
        },
        {
            "message": "Missing item type\nGet firewall export",
            "line": " routes/firewall/firewall.js:630"
        },
        {
            "message": "Missing item type\nCreate a new OpenVPN configuration in firewall.",
            "line": " routes/vpn/openvpn.js:59"
        },
        {
            "message": "Missing item type\nUpdate configuration options.",
            "line": " routes/vpn/openvpn.js:111"
        },
        {
            "message": "Missing item type\nGet OpenVPN configuration data.",
            "line": " routes/vpn/openvpn.js:135"
        },
        {
            "message": "Missing item type\nGet OpenVPN configuration files.",
            "line": " routes/vpn/openvpn.js:146"
        },
        {
            "message": "Missing item type\nGet next VPN LAN free IP.",
            "line": " routes/vpn/openvpn.js:157"
        },
        {
            "message": "Missing item type\nDelete OpenVPN configuration.",
            "line": " routes/vpn/openvpn.js:168"
        },
        {
            "message": "Missing item type\nInstall OpenVPN configuration in the destination firewall.",
            "line": " routes/vpn/openvpn.js:191"
        },
        {
            "message": "Missing item type\nCreate a new CA (Certification Authority).",
            "line": " routes/vpn/pki.js:50"
        },
        {
            "message": "Missing item type\nDelete ca.",
            "line": " routes/vpn/pki.js:89"
        },
        {
            "message": "Missing item type\nCreate a new certificate.",
            "line": " routes/vpn/pki.js:112"
        },
        {
            "message": "Missing item type\nDelete certificate.",
            "line": " routes/vpn/pki.js:146"
        }
    ]
}