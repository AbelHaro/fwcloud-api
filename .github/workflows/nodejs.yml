name: FWCloud-API CI

on: [push, pull_request]

jobs:
  test:
    name: 'FWCloud-API Test'
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 8888:3306
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
          MYSQL_USER: "fwcdbusr"
          MYSQL_PASSWORD: "fwcdbusr"
          MYSQL_DATABASE: "fwcloud"
      mariadb:
        image: mariadb:10.1
        ports:
          - 8889:3306
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
          MYSQL_USER: "fwcdbusr"
          MYSQL_PASSWORD: "fwcdbusr"
          MYSQL_DATABASE: "fwcloud"

    strategy:
      matrix:
        node-version: ['12', '14', '16']
        database: [mysql, mariadb]
        include:
          - database: mysql
            port: 8888
          - database: mariadb
            port: 8889

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Disable mysqldump column statistics
      run: echo 'column-statistics=0' | sudo tee -a /etc/mysql/conf.d/mysqldump.cnf
    - name: Install dependencies
      run: npm install
    - name: Build FWCloud
      run: npm run build --if-present
    - name: Run tests
      run: TYPEORM_PORT=${{ matrix.port }} npm run test -- --forbid-only
      env:
        CI: true
  images:
    name: 'FWCloud-API Docker Image Build'
    needs: test
    #if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./docker
        file: ./docker/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        tags: soltecsis/fwcloud-api:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache